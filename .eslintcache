[{"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\index.js":"1","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\App.js":"2","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\store.js":"3","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\AppRoute.js":"4","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\AppNavbar.js":"5","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\actions\\userAction.js":"6","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\reducers\\rootReducer.js":"7","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\actions\\authAction.js":"8","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\PrivateRoutePasien.js":"9","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\PrivateRoutePsikiater.js":"10","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\RegisterPsikiater.js":"11","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\PatientHistory\\index.js":"12","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\actions\\actionTypes.js":"13","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\reducers\\appReducer.js":"14","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\reducers\\userReducer.js":"15","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Login.js":"16","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\actions\\appAction.js":"17","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Checkout\\index.js":"18","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\RegisterPasien.js":"19","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\API\\mainServer.js":"20","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Appointment\\index.js":"21","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\index.js":"22","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Psikiater\\index.js":"23","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Search\\index.js":"24","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\ReviewAppointmentModal.js":"25","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\AppointmentCard.js":"26","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\PrescriptionModal.js":"27","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\actions\\appointmentAction.js":"28","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Psikiater\\PsikiaterDashboardRoute.js":"29","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\Footer.js":"30","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\Testimoni.js":"31","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\Sidebar\\index.js":"32","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\LineDua.js":"33","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\LineSatu.js":"34","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\CardResult\\index.js":"35","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\Corousel.js":"36","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Profile\\index.js":"37","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\History\\index.js":"38","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\Table\\index.js":"39","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\AddDiagnoseModal.js":"40","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\CreatePrescriptionModal.js":"41","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\Card\\index.js":"42"},{"size":738,"mtime":1609686821947,"results":"43","hashOfConfig":"44"},{"size":1235,"mtime":1609686821915,"results":"45","hashOfConfig":"44"},{"size":229,"mtime":1609686821999,"results":"46","hashOfConfig":"44"},{"size":1582,"mtime":1609920119804,"results":"47","hashOfConfig":"44"},{"size":4663,"mtime":1609996130846,"results":"48","hashOfConfig":"44"},{"size":5837,"mtime":1609993210567,"results":"49","hashOfConfig":"44"},{"size":243,"mtime":1609686821996,"results":"50","hashOfConfig":"44"},{"size":1054,"mtime":1609827805070,"results":"51","hashOfConfig":"44"},{"size":483,"mtime":1609993210557,"results":"52","hashOfConfig":"44"},{"size":476,"mtime":1609900957375,"results":"53","hashOfConfig":"44"},{"size":6953,"mtime":1609827805066,"results":"54","hashOfConfig":"44"},{"size":2756,"mtime":1609900957383,"results":"55","hashOfConfig":"44"},{"size":64,"mtime":1609686821986,"results":"56","hashOfConfig":"44"},{"size":329,"mtime":1609686821995,"results":"57","hashOfConfig":"44"},{"size":562,"mtime":1609993210585,"results":"58","hashOfConfig":"44"},{"size":3850,"mtime":1609686821964,"results":"59","hashOfConfig":"44"},{"size":254,"mtime":1609686821987,"results":"60","hashOfConfig":"44"},{"size":5514,"mtime":1609941612417,"results":"61","hashOfConfig":"44"},{"size":5244,"mtime":1609827805064,"results":"62","hashOfConfig":"44"},{"size":159,"mtime":1609907715306,"results":"63","hashOfConfig":"44"},{"size":6015,"mtime":1609993371576,"results":"64","hashOfConfig":"44"},{"size":548,"mtime":1609686821962,"results":"65","hashOfConfig":"44"},{"size":649,"mtime":1609686821974,"results":"66","hashOfConfig":"44"},{"size":2689,"mtime":1609920119813,"results":"67","hashOfConfig":"44"},{"size":1907,"mtime":1609900957377,"results":"68","hashOfConfig":"44"},{"size":3818,"mtime":1609900957371,"results":"69","hashOfConfig":"44"},{"size":1675,"mtime":1609686821934,"results":"70","hashOfConfig":"44"},{"size":3203,"mtime":1609985097743,"results":"71","hashOfConfig":"44"},{"size":776,"mtime":1609686821972,"results":"72","hashOfConfig":"44"},{"size":1907,"mtime":1609996614288,"results":"73","hashOfConfig":"44"},{"size":3151,"mtime":1609817975088,"results":"74","hashOfConfig":"44"},{"size":2056,"mtime":1609996316659,"results":"75","hashOfConfig":"44"},{"size":832,"mtime":1609942203836,"results":"76","hashOfConfig":"44"},{"size":3760,"mtime":1609941874222,"results":"77","hashOfConfig":"44"},{"size":1459,"mtime":1609920119807,"results":"78","hashOfConfig":"44"},{"size":1403,"mtime":1610000718021,"results":"79","hashOfConfig":"44"},{"size":4616,"mtime":1609918103862,"results":"80","hashOfConfig":"44"},{"size":1764,"mtime":1609900957381,"results":"81","hashOfConfig":"44"},{"size":4858,"mtime":1609918103859,"results":"82","hashOfConfig":"44"},{"size":1652,"mtime":1609918103851,"results":"83","hashOfConfig":"44"},{"size":2392,"mtime":1609918103856,"results":"84","hashOfConfig":"44"},{"size":2177,"mtime":1609918103854,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"bdl8qc",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\index.js",[],["185","186"],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\App.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\store.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\AppRoute.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\AppNavbar.js",["187"],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\actions\\userAction.js",["188"],"import API from \"../../API/mainServer\";\r\nimport appAction from \"./appAction\";\r\nimport swal from \"sweetalert\";\r\nimport { LOGIN, LOGOUT } from \"./actionTypes\";\r\n\r\nconst registerPsikiater = (\r\n  first_name,\r\n  last_name,\r\n  password,\r\n  email,\r\n  date_of_birth,\r\n  gender,\r\n  experience_year,\r\n  region,\r\n  fee,\r\n  work_address\r\n) => async (dispatch) => {\r\n  try {\r\n    const psikiater = await API({\r\n      method: \"POST\",\r\n      url: \"/auth/register-psikiater\",\r\n      data: {\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n        password: password,\r\n        email: email,\r\n        date_of_birth,\r\n        gender: gender,\r\n        experience_year: experience_year,\r\n        region: region,\r\n        fees: fee,\r\n        work_address: work_address,\r\n      },\r\n    });\r\n\r\n    localStorage.setItem(\"isLogin\", true);\r\n    localStorage.setItem(\"accesstoken\", psikiater.data.token);\r\n    localStorage.setItem(\"userId\", psikiater.data.data._id);\r\n    localStorage.setItem(\"role\", psikiater.data.role);\r\n\r\n    dispatch({\r\n      type: LOGIN,\r\n      payload: {\r\n        isLogin: true,\r\n        role: psikiater.data.role,\r\n        user_data: psikiater.data.data,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    swal(\"Register Gagal!\", error.response.data.message, \"error\");\r\n  }\r\n};\r\n\r\nconst registerPatient = (\r\n  first_name,\r\n  last_name,\r\n  password,\r\n  email,\r\n  date_of_birth,\r\n  gender,\r\n  address\r\n) => async (dispatch) => {\r\n  try {\r\n    const patient = await API({\r\n      method: \"POST\",\r\n      url: \"/auth/register-patient\",\r\n      data: {\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n        password: password,\r\n        email: email,\r\n        date_of_birth: date_of_birth,\r\n        gender: gender,\r\n        address: address,\r\n      },\r\n    });\r\n\r\n    localStorage.setItem(\"isLogin\", true);\r\n    localStorage.setItem(\"accesstoken\", patient.data.token);\r\n    localStorage.setItem(\"userId\", patient.data.data._id);\r\n    localStorage.setItem(\"role\", patient.data.role);\r\n\r\n    dispatch({\r\n      type: LOGIN,\r\n      payload: {\r\n        isLogin: true,\r\n        role: patient.data.role,\r\n        user_data: patient.data.data,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    swal(\"Register Gagal!\", error.response.data.message, \"error\");\r\n  }\r\n};\r\n\r\nconst fetchUserData = () => async (dispatch) => {\r\n  try {\r\n    const role = localStorage.getItem(\"role\");\r\n    const user_id = localStorage.getItem(\"userId\");\r\n    const accesstoken = localStorage.getItem(\"accesstoken\");\r\n\r\n    if (!role || !user_id || !accesstoken) {\r\n      console.log(\"not persist data\");\r\n      dispatch({ type: LOGOUT });\r\n    }\r\n\r\n    if (role === \"PATIENT\") {\r\n      const patient = await API({\r\n        method: \"GET\",\r\n        url: `/patients/${user_id}`,\r\n        headers: {\r\n          accesstoken: accesstoken,\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: LOGIN,\r\n        payload: {\r\n          isLogin: true,\r\n          role: role,\r\n          user_data: patient.data.data,\r\n        },\r\n      });\r\n    }\r\n\r\n    if (role === \"PSIKIATER\") {\r\n      const psikiater = await API({\r\n        method: \"GET\",\r\n        url: `/psikiater/${user_id}`,\r\n        headers: {\r\n          accesstoken: accesstoken,\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: LOGIN,\r\n        payload: {\r\n          isLogin: true,\r\n          role: role,\r\n          user_data: psikiater.data.data,\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst checkAccessToken = (accessToken) => async (dispatch) => {\r\n  try {\r\n    const getUserProfile = await API({\r\n      method: \"GET\",\r\n      url: \"/auth/identifer\",\r\n      headers: {\r\n        accessToken: accessToken,\r\n      },\r\n    });\r\n\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: {\r\n        user_id: getUserProfile.data.data.user_id,\r\n        role: getUserProfile.data.data.role,\r\n      },\r\n    });\r\n    dispatch(appAction.setLoading(false));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst changePsikiaterSchedule = (\r\n  psikiater_id,\r\n  accesstoken,\r\n  work_days,\r\n  work_time\r\n) => async (dispatch) => {\r\n  try {\r\n    const response = await API({\r\n      method: \"PATCH\",\r\n      url: `/schedule/${psikiater_id}`,\r\n      headers: {\r\n        accesstoken: accesstoken,\r\n      },\r\n      data: {\r\n        work_days: work_days,\r\n        work_time: work_time,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst userAction = {\r\n  checkAccessToken,\r\n  registerPsikiater,\r\n  registerPatient,\r\n  fetchUserData,\r\n  changePsikiaterSchedule,\r\n};\r\n\r\nexport default userAction;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\reducers\\rootReducer.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\actions\\authAction.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\PrivateRoutePasien.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\PrivateRoutePsikiater.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\RegisterPsikiater.js",["189","190"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport userAction from \"../redux/actions/userAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ArrowLeft } from \"react-bootstrap-icons\";\r\nimport { Form, Row, Col, Container, Button, Image } from \"react-bootstrap\";\r\n\r\nconst Register = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [first_name, setFirstName] = useState(\"\");\r\n  const [last_name, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [date_of_birth, setDateofBirth] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [experience_year, setExperienceYear] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [fee, setFee] = useState(\"\");\r\n  const [work_address, setWorkAddress] = useState(\"\");\r\n\r\n  const formHandle = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      userAction.registerPsikiater(\r\n        first_name,\r\n        last_name,\r\n        password,\r\n        email,\r\n        date_of_birth,\r\n        gender,\r\n        experience_year,\r\n        region,\r\n        fee,\r\n        work_address\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.role === \"PSIKIATER\") {\r\n      history.push(\"/psikiater-dashboard\");\r\n    }\r\n  }, [user.isLogin]);\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ margin: \"0px\" }}>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              backgroundImage: `url(\"https://images.unsplash.com/photo-1580820267682-426da823b514?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8cG9ydHJhaXQlMjBiYWNrZ3JvdW5kfGVufDB8fDB8&ixlib=rb-1.2.1&w=1000&q=80\")`,\r\n            }}\r\n          ></Col>\r\n          <Col style={{ padding: \"2% 0%\", marginLeft: \"10%\" }}>\r\n            <p>\r\n              <b onClick={handleBack} style={{ cursor: \"pointer\" }}>\r\n                <ArrowLeft\r\n                  color=\"black\"\r\n                  size={20}\r\n                  style={{ paddingRight: \"5px\" }}\r\n                />\r\n                Back\r\n              </b>\r\n            </p>\r\n            <h2>Register as Psikiater</h2>\r\n            <Form onSubmit={formHandle}>\r\n              <Form.Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"First Name\"\r\n                      onChange={(e) => setFirstName(e.target.value)}\r\n                      value={first_name}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Last Name\"\r\n                      onChange={(e) => setLastName(e.target.value)}\r\n                      value={last_name}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                ></Form.Control>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  email tidak boleh kosong.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Date of Birth</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  onChange={(e) => setDateofBirth(e.target.value)}\r\n                  value={date_of_birth}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"mr-sm-2\"\r\n                  id=\"inlineFormCustomSelect\"\r\n                  custom\r\n                  onChange={(e) => setGender(e.target.value)}\r\n                  value={gender}\r\n                >\r\n                  <option value=\"\">Choose...</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Work Address</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={2}\r\n                  placeholder=\"Work Address\"\r\n                  onChange={(e) => setWorkAddress(e.target.value)}\r\n                  value={work_address}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>Experience Year</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Experience Year\"\r\n                      onChange={(e) => setExperienceYear(e.target.value)}\r\n                      value={experience_year}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>Region</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Region\"\r\n                      onChange={(e) => setRegion(e.target.value)}\r\n                      value={region}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>Fee</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Fee\"\r\n                      onChange={(e) => setFee(e.target.value)}\r\n                      value={fee}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Button type=\"submit\" value=\"Register\">\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\PatientHistory\\index.js",["191"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./main.css\";\r\nimport AppointmentCard from \"../../components/AppointmentCard\";\r\nimport PrescriptionModal from \"../../components/PrescriptionModal\";\r\nimport ReviewAppointmentModal from \"../../components/ReviewAppointmentModal\";\r\nimport API from \"../../API/mainServer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PatientHistory = () => {\r\n  const user = useSelector((store) => store.user.user_data);\r\n  const [prescriptionModalShow, setPrescriptionModalShow] = useState(false);\r\n  const [reviewModalShow, setReviewModalShow] = useState(false);\r\n  const [prescription, setPrescription] = useState({});\r\n  const [choosenAppointment, setChoosenAppointment] = useState({});\r\n  const [appointment, setAppointment] = useState([]);\r\n\r\n  const fetchAppointment = async () => {\r\n    const token = localStorage.getItem(\"accesstoken\");\r\n    const response = await API({\r\n      method: \"GET\",\r\n      url: `/appointments/patient`,\r\n      headers: {\r\n        accesstoken: token,\r\n      },\r\n    });\r\n\r\n    setAppointment(response.data.data);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      fetchAppointment();\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  const handlePerscriptionModalShow = (content, e) => {\r\n    e.preventDefault();\r\n    setPrescription(content);\r\n    setPrescriptionModalShow(true);\r\n  };\r\n  const handlePrescriptionModalClose = () => {\r\n    setPrescriptionModalShow(false);\r\n    setPrescription({});\r\n  };\r\n\r\n  const handleReviewModalShow = (content, e) => {\r\n    e.preventDefault();\r\n    setChoosenAppointment(content);\r\n    setReviewModalShow(true);\r\n  };\r\n  const handleReviewModalClose = () => {\r\n    setReviewModalShow(false);\r\n    setChoosenAppointment({});\r\n  };\r\n\r\n  return (\r\n    <div className=\"container main-container\">\r\n      <h3 className=\"title\">Patient Appointment History</h3>\r\n\r\n      <div className=\"list-history\">\r\n        <PrescriptionModal\r\n          show={prescriptionModalShow}\r\n          handleClose={handlePrescriptionModalClose}\r\n          prescription={prescription}\r\n        />\r\n        <ReviewAppointmentModal\r\n          show={reviewModalShow}\r\n          handleClose={handleReviewModalClose}\r\n          patient_id={choosenAppointment.patient_id?._id}\r\n          psikiater_id={choosenAppointment.psikiater_id?._id}\r\n          appointment_id={choosenAppointment._id}\r\n        />\r\n\r\n        {appointment.map((d) => (\r\n          <AppointmentCard\r\n            key={d._id}\r\n            appointment={d}\r\n            showPrescriptionModal={(v, e) => handlePerscriptionModalShow(v, e)}\r\n            showReviewModal={(v, e) => handleReviewModalShow(v, e)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientHistory;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\actions\\actionTypes.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\reducers\\appReducer.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Login.js",["192","193","194","195"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../redux/actions/authAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (user.role === \"PSIKIATER\") {\r\n      // TODO: change the route to psikiater dashboard\r\n      history.push(\"/psikiater\");\r\n    } else if (user.role === \"PATIENT\") {\r\n      history.push(\"/\");\r\n    }\r\n  }, [user.isLogin]);\r\n\r\n  const handleClose = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const formHandle = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  const registerPsikiater = () => {\r\n    history.push(\"/registerPsikiater\");\r\n  };\r\n\r\n  const registerPasien = () => {\r\n    history.push(\"/registerPasien\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container style={{ marginLeft: \"0%\" }}>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              backgroundImage: `url(\"https://images.unsplash.com/photo-1580820267682-426da823b514?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8cG9ydHJhaXQlMjBiYWNrZ3JvdW5kfGVufDB8fDB8&ixlib=rb-1.2.1&w=1000&q=80\")`,\r\n            }}\r\n          ></Col>\r\n          <Col style={{ padding: \"18%\" }}>\r\n            <h1>Login</h1>\r\n            <Form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={handleClose}\r\n                style={{ margin: \"5px\" }}\r\n              >\r\n                Home\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={formHandle}>\r\n                Sign In\r\n              </Button>\r\n            </Form>\r\n            <Form.Group\r\n              style={{ textAlign: \"center\", color: \"red\", marginTop: \"10%\" }}\r\n            >\r\n              <a>Don't have an account?</a>\r\n            </Form.Group>\r\n            <Form.Group style={{ textAlign: \"center\", color: \"blue\" }}>\r\n              <a style={{ cursor: \"pointer\" }} onClick={registerPsikiater}>\r\n                Sign Up Psikiater\r\n              </a>{\" \"}\r\n              ||{\" \"}\r\n              <a style={{ cursor: \"pointer\" }} onClick={registerPasien}>\r\n                Sign Up Pasien\r\n              </a>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {/* <span>{JSON.stringify(user)}</span> */}\r\n      {/* <form onSubmit={formHandle}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n        />\r\n        <input type=\"submit\" value=\"Login\" />\r\n        <button onClick={registerPsikiater}>Register Psikiater</button>\r\n        <button onClick={registerPasien}>Register Pasien</button>\r\n      </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\actions\\appAction.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Checkout\\index.js",["196","197"],"import { useDispatch } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport API from \"../../API/mainServer\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Jumbotron,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Card,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport appointmentAction from \"../../redux/actions/appointmentAction\";\r\n\r\nfunction Checkout() {\r\n  const [appointment, setAppointment] = useState({});\r\n  const { appointment_id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  console.log(appointment_id);\r\n  console.log(process.env.REACT_APP_BASE_URL);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const appointment = await API({\r\n          method: \"GET\",\r\n          url: `/appointments/${appointment_id}`,\r\n          headers: {\r\n            accesstoken: localStorage.getItem(\"accesstoken\"),\r\n          },\r\n        });\r\n\r\n        setAppointment(appointment.data.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    getData();\r\n\r\n    return getData;\r\n  }, []);\r\n\r\n  const checkoutButtonHandler = () => {\r\n    dispatch(\r\n      appointmentAction.changeStatusAppointment(\r\n        \"Paid\",\r\n        appointment._id,\r\n        localStorage.getItem(\"accesstoken\")\r\n      )\r\n    );\r\n    history.push(\"/patient-history\");\r\n    swal(\"Checkout Sukses!\", \"\", \"success\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Jumbotron\r\n          style={{\r\n            marginTop: \"5%\",\r\n            textAlign: \"center\",\r\n            backgroundColor: \"#ff4757\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n              <img\r\n                style={{\r\n                  marginTop: \"30px\",\r\n                  maxWidth: \"250px\",\r\n                  maxHeight: \"230px\",\r\n                }}\r\n                src={appointment?.psikiater_id?.avatar_url}\r\n              ></img>\r\n            </Col>\r\n            <Col\r\n              sm={12}\r\n              lg={6}\r\n              style={{ display: \"flex\", justifyContent: \"space-evenly\" }}\r\n            >\r\n              <Container>\r\n                <Form style={{ marginTop: \"30px\" }}>\r\n                  <Form.Group controlId=\"formPsikiaterName\">\r\n                    <Form.Label>\r\n                      <b style={{ color: \"white\" }}>Psikiater</b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        backgroundColor: \"#70a1ff\",\r\n                      }}\r\n                      type=\"text\"\r\n                      value={`${appointment?.psikiater_id?.first_name} ${appointment?.psikiater_id?.last_name}`}\r\n                      readOnly\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formPatientName\">\r\n                    <Form.Label>\r\n                      <b style={{ color: \"white\" }}>Patient</b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        backgroundColor: \"#70a1ff\",\r\n                      }}\r\n                      type=\"text\"\r\n                      value={`${appointment?.patient_id?.first_name} ${appointment?.patient_id?.last_name}`}\r\n                      readOnly\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formScheduledAppointment\">\r\n                    <Form.Label>\r\n                      <b style={{ color: \"white\" }}>Schedule</b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        backgroundColor: \"#70a1ff\",\r\n                      }}\r\n                      type=\"text\"\r\n                      value={`${moment(appointment?.appointment_date).format(\r\n                        \"YYYY MMM DD\"\r\n                      )} - ${appointment?.appointment_time}`}\r\n                      readOnly\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n        </Jumbotron>\r\n        <Card\r\n          style={{\r\n            backgroundColor: \"#2ed573\",\r\n            width: \"17rem\",\r\n            height: \"10rem\",\r\n            textAlign: \"center\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        >\r\n          <Card.Header>\r\n            <b style={{ color: \"#ffffff\" }}>TOTAL PAYMENT</b>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Card.Text style={{ color: \"#ffffff\" }}>\r\n              {appointment?.psikiater_id?.fees}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n        <Container\r\n          style={{\r\n            marginTop: \"30px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{\r\n              margin: \"auto\",\r\n            }}\r\n            variant=\"dark\"\r\n            onClick={checkoutButtonHandler}\r\n          >\r\n            CHECKOUT\r\n          </Button>\r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\nexport default Checkout;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\RegisterPasien.js",["198","199"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport userAction from \"../redux/actions/userAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ArrowLeft } from \"react-bootstrap-icons\";\r\nimport { Form, Row, Col, Container, Button, Image } from \"react-bootstrap\";\r\n\r\nconst Register = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const user = useSelector((state) => state.user);\r\n  const [first_name, setFirstName] = useState(\"\");\r\n  const [last_name, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [date_of_birth, setDateofBirth] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const formHandle = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      userAction.registerPatient(\r\n        first_name,\r\n        last_name,\r\n        password,\r\n        email,\r\n        date_of_birth,\r\n        gender,\r\n        address\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.role === \"PATIENT\") {\r\n      history.push(\"/\");\r\n    }\r\n  }, [user.isLogin]);\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ margin: \"0px\" }}>\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              backgroundImage: `url(\"https://images.unsplash.com/photo-1580820267682-426da823b514?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8cG9ydHJhaXQlMjBiYWNrZ3JvdW5kfGVufDB8fDB8&ixlib=rb-1.2.1&w=1000&q=80\")`,\r\n            }}\r\n          ></Col>\r\n          <Col style={{ padding: \"1% 0%\", marginLeft: \"10%\" }}>\r\n            <p>\r\n              <b onClick={handleBack} style={{ cursor: \"pointer\" }}>\r\n                <ArrowLeft\r\n                  color=\"black\"\r\n                  size={20}\r\n                  style={{ paddingRight: \"5px\" }}\r\n                />\r\n                Back\r\n              </b>\r\n            </p>\r\n            <h2>Register as Patient</h2>\r\n            <Form onSubmit={formHandle}>\r\n              <Form.Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"First Name\"\r\n                      onChange={(e) => setFirstName(e.target.value)}\r\n                      value={first_name}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Last Name\"\r\n                      onChange={(e) => setLastName(e.target.value)}\r\n                      value={last_name}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Form.Row>\r\n              <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Date of Birth</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  onChange={(e) => setDateofBirth(e.target.value)}\r\n                  value={date_of_birth}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"mr-sm-2\"\r\n                  id=\"inlineFormCustomSelect\"\r\n                  custom\r\n                  onChange={(e) => setGender(e.target.value)}\r\n                  value={gender}\r\n                >\r\n                  <option value=\"\">Choose...</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={2}\r\n                  placeholder=\"Address\"\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  value={address}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Button type=\"submit\" value=\"Register\" style={{ margin: \"10px\" }}>\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\API\\mainServer.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Appointment\\index.js",["200","201","202","203","204"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport API from \"../../API/mainServer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport appointmentAction from \"../../redux/actions/appointmentAction\";\r\nimport TimePicker from \"react-time-picker\";\r\n\r\nconst Appointment = () => {\r\n  const [psikiaterData, setPsikiaterData] = useState({});\r\n  const [appointment_time, setAppointmentTime] = useState(\"\");\r\n  const [appointment_date, setAppointmentDate] = useState(\"\");\r\n  const [complaint, setComplaint] = useState(\"\");\r\n  const [allergy, setAllergy] = useState(\"\");\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const dataUser = useSelector((state) => state.user.user_data);\r\n  const patient_id = dataUser._id;\r\n  const { psikiater_id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const getData = await API({\r\n          url: `/psikiater/${psikiater_id}`,\r\n          method: \"GET\",\r\n          headers: {\r\n            accesstoken: localStorage.getItem(\"accesstoken\"),\r\n          },\r\n        });\r\n        setPsikiaterData(getData.data.data);\r\n        console.log(getData.data.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getData();\r\n\r\n    return getData;\r\n  }, []);\r\n\r\n  const getIdCallback = (id) => {\r\n    history.push(`/checkout-payment/${id}`);\r\n  };\r\n\r\n  const createAppointmentHandler = (e) => {\r\n    e.preventDefault();\r\n    const accesstoken = localStorage.getItem(\"accesstoken\");\r\n    dispatch(\r\n      appointmentAction.createAppointment(\r\n        complaint,\r\n        allergy,\r\n        accesstoken,\r\n        psikiater_id,\r\n        patient_id,\r\n        appointment_date,\r\n        appointment_time,\r\n        getIdCallback\r\n      )\r\n    );\r\n  };\r\n\r\n  const complaintHandler = (e) => {\r\n    setComplaint(e.target.value);\r\n  };\r\n  const appointmentDateHandler = (e) => {\r\n    setAppointmentDate(e.target.value);\r\n  };\r\n  const appointmentTimeHandler = (e) => {\r\n    console.log(e.target.value);\r\n    setAppointmentTime(e.target.value);\r\n    console.log(appointment_time);\r\n  };\r\n\r\n  const allergyHandler = (e) => {\r\n    setAllergy(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ fontWeight: \"bold\", textAlign: \"center\" }}>Appointment</h1>\r\n      <Container>\r\n        <Row>\r\n          <Col sm={12} lg={6}>\r\n            <h5 style={{ fontWeight: \"bold\" }}>PSIKIATER DATA</h5>\r\n            <img\r\n              src={`${psikiaterData.avatar_url}`}\r\n              style={{ width: \"300px\", height: \"250px\" }}\r\n            ></img>\r\n          </Col>\r\n          <Col>\r\n            <Form style={{ marginTop: \"5px\" }}>\r\n              <Form.Group>\r\n                <Form.Label>Psikiater Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={`${psikiaterData.first_name} ${psikiaterData.last_name} `}\r\n                  readOnly\r\n                ></Form.Control>\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={`${psikiaterData?.work_address}`}\r\n                  readOnly\r\n                ></Form.Control>\r\n                <Form.Label>Fees</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={`${psikiaterData?.fees}`}\r\n                  readOnly\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Appointment Date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  onChange={appointmentDateHandler}\r\n                  value={appointment_date}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <TimePicker\r\n                onChange={(v) => {\r\n                  setAppointmentTime(v);\r\n                }}\r\n                value={appointment_time}\r\n              />\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <hr></hr>\r\n        <Row>\r\n          <Col sm={12} lg={6}>\r\n            <Form style={{ marginTop: \"30px\" }}>\r\n              <h5 style={{ fontWeight: \"bold\" }}>PATIENT DATA</h5>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                  <Form.Label>First Name</Form.Label>\r\n                  <Form.Control\r\n                    value={dataUser.first_name}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter first name here\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control\r\n                    value={dataUser.last_name}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter last name here\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Complain</Form.Label>\r\n                <Form.Control\r\n                  onChange={complaintHandler}\r\n                  value={complaint}\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Allergy</Form.Label>\r\n                <Form.Control\r\n                  onChange={allergyHandler}\r\n                  value={allergy}\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <Button onClick={createAppointmentHandler} variant=\"dark\">\r\n          Make Appointment\r\n        </Button>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\index.js",["205","206","207","208"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport Corousel from \"./Corousel\";\r\nimport LineSatu from \"./LineSatu\";\r\nimport LineDua from \"./LineDua\";\r\nimport Testimoni from \"./Testimoni\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Corousel />\r\n      <LineSatu />\r\n      <LineDua />\r\n      <Testimoni />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Psikiater\\index.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Search\\index.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\ReviewAppointmentModal.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\AppointmentCard.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\PrescriptionModal.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\redux\\actions\\appointmentAction.js",["209","210"],"import API from \"../../API/mainServer\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst changeStatusAppointment = (status, appointment_id, accesstoken) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const response = await API({\r\n      method: \"PATCH\",\r\n      url: `/appointments/status/${appointment_id}`,\r\n      headers: {\r\n        accesstoken: accesstoken,\r\n      },\r\n      data: {\r\n        status: status,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst addDiagnosePatient = (\r\n  diagnose_name,\r\n  diagnose_date,\r\n  accesstoken,\r\n  appointment_id\r\n) => async (dispatch) => {\r\n  try {\r\n    const response = await API({\r\n      method: \"PATCH\",\r\n      url: `/appointments/diagnose/${appointment_id}`,\r\n      headers: {\r\n        accesstoken: accesstoken,\r\n      },\r\n      data: {\r\n        diagnose_name: diagnose_name,\r\n        diagnose_date: diagnose_date,\r\n      },\r\n    });\r\n\r\n    swal(\"Success\", response.data.message, \"success\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst createRating = (\r\n  patient_id,\r\n  psikiater_id,\r\n  appointment_id,\r\n  rating,\r\n  review\r\n) => async (dispatch) => {\r\n  try {\r\n    const token = localStorage.getItem(\"accesstoken\");\r\n\r\n    const response = await API({\r\n      method: \"POST\",\r\n      url: \"/reviews\",\r\n      headers: {\r\n        accesstoken: token,\r\n      },\r\n      data: {\r\n        patient_id,\r\n        psikiater_id,\r\n        appointment_id,\r\n        rating,\r\n        feedback: review,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    swal(\"Failed\", error.response.data.message, \"error\");\r\n  }\r\n};\r\n\r\nconst createPrescription = (\r\n  appointment_id,\r\n  drug_name,\r\n  method_name,\r\n  time_sequence\r\n) => async (dispatch) => {\r\n  try {\r\n    const response = await API({\r\n      method: \"POST\",\r\n      url: `/prescriptions/${appointment_id}`,\r\n      headers: {\r\n        accesstoken: localStorage.getItem(\"accesstoken\"),\r\n      },\r\n      data: {\r\n        drug_name: drug_name,\r\n        method_name: method_name,\r\n        time_sequence: time_sequence,\r\n      },\r\n    });\r\n\r\n    swal(\"Success\", response.data.message, \"success\");\r\n  } catch (error) {\r\n    console.log(error);\r\n    swal(\"Failed\", error.response.data.message, \"error\");\r\n  }\r\n};\r\n\r\nconst createAppointment = (\r\n  complaint,\r\n  allergy,\r\n  accesstoken,\r\n  psikiater_id,\r\n  patient_id,\r\n  appointment_date,\r\n  appointment_time,\r\n  getIdCallback\r\n) => async (dispatch) => {\r\n  try {\r\n    const createAppointment = await API({\r\n      method: \"POST\",\r\n      url: \"/appointments\",\r\n      headers: {\r\n        accesstoken: accesstoken,\r\n      },\r\n      data: {\r\n        psikiater_id: psikiater_id,\r\n        patient_id: patient_id,\r\n        appointment_date: appointment_date,\r\n        appointment_time: appointment_time,\r\n        complaint: complaint,\r\n        allergy: [allergy],\r\n      },\r\n    });\r\n    console.log(createAppointment.data.data._id);\r\n    getIdCallback(createAppointment.data.data._id);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst appointmentAction = {\r\n  changeStatusAppointment,\r\n  addDiagnosePatient,\r\n  createRating,\r\n  createAppointment,\r\n  createPrescription,\r\n};\r\n\r\nexport default appointmentAction;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Psikiater\\PsikiaterDashboardRoute.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\Footer.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\Testimoni.js",["211","212","213"],"import React from \"react\";\r\nimport { Card, Carousel, Container, CardDeck } from \"react-bootstrap\";\r\n\r\nconst Testimoni = () => {\r\n  return (\r\n    <>\r\n      <section class=\"wrapper style1\">\r\n        <div class=\"inner\">\r\n          <header class=\"align-center\">\r\n            <h2>Apa Kata Mereka</h2>\r\n          </header>\r\n          <Container>\r\n            <div class=\"flex flex-3\">\r\n              <div class=\"col align-center\" id=\"linesatu\">\r\n                <div class=\"image round fit\">\r\n                  <img\r\n                    src=\"https://non-indonesia-distribution.brta.in/2018-08/ce8014b02db258d883f545cc27bf4b35.jpg\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <p>\r\n                  Sudah 3,5 tahun saya rutin berkunjung ke psikiater. Awalnya\r\n                  yang konsultasi 1 jam, lalu menurun jadi 45 menit, sekarang\r\n                  jadi sekitar 15-30 menit. Memang untuk kondisi bipolar seperti\r\n                  saya ini harus selalu dipantau. Namun saya merasa sudah sangat\r\n                  jauh lebih baik jika dibandingkan saya pertama kali berkunjung\r\n                  ke psikiater dulu.\r\n                </p>\r\n              </div>\r\n              <div class=\"col align-center\" id=\"linesatu\">\r\n                <div class=\"image round fit\">\r\n                  <img\r\n                    src=\"https://cdn.idntimes.com/content-images/post/20190110/c12-e35fa457b5c8da29b2c488cf2204dcbd_600x400.jpg\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <p>\r\n                  Di luar segala rasa lelah dan perasaan ingin menyerah, kini\r\n                  saya bisa menertawakan perjalanan depresi saya. Saya bersyukur\r\n                  pernah melalui berbagai terapi. Karena berkat terapi-terapi\r\n                  itu, tidak hanya ‘sembuh’ dari gangguan mental yang saya\r\n                  alami, saya juga menjadi manusia yang jauh lebih baik karena\r\n                  semakin memahami mekanisme pikiran dan emosi saya.\r\n                </p>\r\n              </div>\r\n              <div class=\"col align-center\" id=\"linesatu\">\r\n                <div class=\"image round fit\">\r\n                  <img\r\n                    src=\"https://image-cdn.medkomtek.com/VU4jKu3sxnr8jCNWpXZ99DDqQhM=/673x379/smart/klikdokter-media-buckets/medias/2309218/original/027041400_1573260772-Setiap-Orang-Punya-Tipe-Pasangan-Ideal-Mengapa-Bisa-Begitu-By-Roman-Samborskyi-Shutterstock_777923671.jpg\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <p>\r\n                  Untuk teman-teman atau anggota keluarganya yang memiliki\r\n                  masalah gangguan pikiran dan jiwa. Jangan ragu dan takut untuk\r\n                  segera konsultasi ke psikiater. Saya sendiri sudah berobat selama\r\n                  beberapa bulan dan sudah merasakan perubahan positif. Keadaan\r\n                  pikiran dan mental saya jauh lebih baik dari sebelumnya.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Testimoni;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\Sidebar\\index.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\LineDua.js",["214","215"],"import React from \"react\";\r\nimport { Row, Col, Image, Container } from \"react-bootstrap\";\r\n\r\n\r\nconst LineDua = () => {\r\n  return (\r\n    <>\r\n    <div className=\"wrapper style2\">\r\n      <Container>\r\n      <Row>\r\n        <Col style={{textAlign:\"justify\"}} id=\"linesatu\">\r\n          <h3>Area</h3>\r\n          <p>Pelayanan Kami hanya Sekitar Jabodetabek</p>\r\n        </Col>\r\n        <Col>\r\n        <div class=\"mapouter\"><div class=\"gmap_canvas\"><iframe width=\"500px\" height=\"500px\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"https://maps.google.com/maps?width=600&amp;height=400&amp;hl=en&amp;q=Depok&amp;t=&amp;z=10&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\" fluid></iframe></div></div>\r\n        </Col>\r\n      </Row>\r\n      </Container>\r\n    </div>\r\n      \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineDua;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\LineSatu.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\CardResult\\index.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Home\\Corousel.js",["216","217"],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\Profile\\index.js",["218","219","220","221"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport API from \"../../API/mainServer\";\r\nimport { Container, Form, Col, Row, Image } from \"react-bootstrap\";\r\n\r\nconst Index = () => {\r\n  const accesstoken = localStorage.getItem(\"accesstoken\");\r\n  const profile = useSelector((store) => store.user.user_data);\r\n  console.log(profile);\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ fontWeight: \"bold\", textAlign: \"center\" }}>Profile</h1>\r\n      <Container style={{ backgroundColor: \"#ededed\", padding: \"20px\" }}>\r\n        <Form>\r\n          <Col style={{ textAlign: \"center\" }}>\r\n            <Image\r\n              src=\"https://scontent.fsub7-1.fna.fbcdn.net/v/t1.0-9/135604960_3854645761223085_2398874445404700536_n.jpg?_nc_cat=106&ccb=2&_nc_sid=730e14&_nc_eui2=AeGd1wFCmdo4yvvuAsb016Rghkoj8IS0f8KGSiPwhLR_wir5549QBF8cbUFFzc5qxOLhMLLgO1itgducXBtVcgMr&_nc_ohc=51hqTJGvAPUAX_gPASH&_nc_ht=scontent.fsub7-1.fna&oh=34e59394671ff2788c3f0641555681ba&oe=6015FD64\"\r\n              roundedCircle\r\n              alt=\"images\"\r\n              style={{\r\n                width: \"300px\",\r\n                paddingBottom: \"20px\",\r\n              }}\r\n            />\r\n          </Col>\r\n          <Form.Group as={Row}>\r\n            <Col sm=\"3\">\r\n              <Form.Label>Nama Depan</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Nama Depan\"\r\n                value={profile.first_name}\r\n                readOnly\r\n              />\r\n            </Col>\r\n            <Col sm=\"3\">\r\n              <Form.Label>Nama Belakang</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Nama Panjang\"\r\n                value={profile.last_name}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Col sm=\"8\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"email\"\r\n                value={profile.email}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Col sm=\"8\">\r\n              <Form.Label>Tanggal Lahir</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Tanggal Lahir\"\r\n                value={profile.date_of_birth}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Col sm=\"8\">\r\n              <Form.Label>Jenis Kelamin</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Jenis Kelamin\"\r\n                value={profile.gender}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Col sm=\"8\">\r\n              <Form.Label>Alamat Kantor</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Alamat Kantor\"\r\n                value={profile.work_address}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Col sm=\"8\">\r\n              <Form.Label>Pengalaman</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Pengalaman\"\r\n                value={profile.info?.experience_year}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Col sm=\"8\">\r\n              <Form.Label>Wilayah</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Wilayah\"\r\n                value={profile.info?.region}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Col sm=\"8\">\r\n              <Form.Label>Hari Kerja</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Jam Kerja\"\r\n                value={profile.schedule.work_days}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Col sm=\"8\">\r\n              <Form.Label>Waktu Bekerja</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Jam Kerja\"\r\n                value={profile.schedule.work_time}\r\n                readOnly\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\pages\\History\\index.js",["222"],"import React, { useState, useEffect } from \"react\";\r\nimport API from \"../../API/mainServer\";\r\nimport AppointmentCard from \"../../components/AppointmentCard\";\r\nimport PrescriptionModal from \"../../components//PrescriptionModal.js\";\r\n\r\nconst Index = () => {\r\n  const accesstoken = localStorage.getItem(\"accesstoken\");\r\n  const [prescriptionModalShow, setPrescriptionModalShow] = useState(false);\r\n  const [prescription, setPrescription] = useState({});\r\n  const [listOfAppointment, setListOfAppointment] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAppointment = async () => {\r\n      const res = await API({\r\n        method: \"GET\",\r\n        url: `/appointments/psikiater`,\r\n        headers: { accesstoken: accesstoken },\r\n      });\r\n      console.log(res.data);\r\n      setListOfAppointment(res.data.data);\r\n    };\r\n    fetchAppointment();\r\n    return fetchAppointment;\r\n  }, []);\r\n\r\n  const handlePerscriptionModalShow = (content, e) => {\r\n    e.preventDefault();\r\n    setPrescription(content);\r\n    setPrescriptionModalShow(true);\r\n  };\r\n  const handlePrescriptionModalClose = () => {\r\n    setPrescriptionModalShow(false);\r\n    setPrescription({});\r\n  };\r\n\r\n  const listOfHistory = listOfAppointment.map((appointment) => {\r\n    return (\r\n      <AppointmentCard\r\n        appointment={appointment}\r\n        showPrescriptionModal={(v, e) => handlePerscriptionModalShow(v, e)}\r\n        showRating={false}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ fontWeight: \"bold\", textAlign: \"center\" }}>History</h1>\r\n      <PrescriptionModal\r\n        show={prescriptionModalShow}\r\n        handleClose={handlePrescriptionModalClose}\r\n        prescription={prescription}\r\n      />\r\n      {listOfHistory}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\Table\\index.js",["223"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Cards from \"../Card/index\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport { Container, ButtonGroup, Button, Row, Col } from \"react-bootstrap\";\r\nimport API from \"../../API/mainServer\";\r\nimport moment from \"moment\";\r\nimport CreatePrescriptionModal from \"../CreatePrescriptionModal.js\";\r\nimport AddDiagnoseModal from \"../AddDiagnoseModal.js\";\r\nimport appointmentAction from \"../../redux/actions/appointmentAction.js\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst Index = () => {\r\n  const dispatch = useDispatch();\r\n  const accesstoken = localStorage.getItem(\"accesstoken\");\r\n  const [toggle, setToggle] = useState(false);\r\n  const [selectedAppointment, setSelectedAppointment] = useState({});\r\n  const [appointmentData, setAppointmentData] = useState([]);\r\n  const [showPrescriptionModal, setShowPrescriptionModal] = useState(false);\r\n  const [showDiagnoseModal, setShowDiagnoseModal] = useState(false);\r\n\r\n  //fetch data ketika page pertama kali di buka\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await API({\r\n        method: \"GET\",\r\n        url: `/appointments/psikiater`,\r\n        headers: {\r\n          accesstoken: accesstoken,\r\n        },\r\n      });\r\n      console.log(res.data);\r\n      setAppointmentData(res.data.data);\r\n    };\r\n    fetchData();\r\n    return fetchData;\r\n  }, []);\r\n\r\n  const appointment = appointmentData.map((data) => {\r\n    return {\r\n      appointment: data,\r\n      title: `${data.patient_id.first_name} ${data.patient_id.last_name}`,\r\n      date: `${moment(data.appointment_date).format(\"YYYY-MM-DD\")} ${\r\n        data.appointment_time\r\n      }`,\r\n    };\r\n  });\r\n\r\n  function handleEvent(params) {\r\n    console.log(params.event._def.extendedProps.appointment);\r\n    setSelectedAppointment(params.event._def.extendedProps.appointment);\r\n    setToggle(true);\r\n  }\r\n\r\n  const handlePrescriptionModalShow = () => {\r\n    setShowPrescriptionModal(true);\r\n  };\r\n  const handlePrescriptionModalClose = () => {\r\n    setShowPrescriptionModal(false);\r\n  };\r\n\r\n  const handleDiagnoseModalShow = () => {\r\n    setShowDiagnoseModal(true);\r\n  };\r\n  const handleDiagnoseModalClose = () => {\r\n    setShowDiagnoseModal(false);\r\n  };\r\n\r\n  const handleFinishAppointment = () => {\r\n    dispatch(\r\n      appointmentAction.changeStatusAppointment(\r\n        \"Done\",\r\n        selectedAppointment._id,\r\n        localStorage.getItem(\"accesstoken\")\r\n      )\r\n    );\r\n    swal(\"Success\", \"Appointment sudah selesai\", \"success\");\r\n  };\r\n\r\n  const AppointmentActionButtons = () => (\r\n    <Row>\r\n      <Col>\r\n        <ButtonGroup\r\n          style={{ marginBottom: \"1rem\" }}\r\n          aria-label=\"Appointment Action Group\"\r\n        >\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={handlePrescriptionModalShow}\r\n            disabled={\r\n              selectedAppointment.prescription_id ||\r\n              selectedAppointment.status === \"Done\"\r\n                ? true\r\n                : false\r\n            }\r\n          >\r\n            Buat Resep\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={handleDiagnoseModalShow}\r\n            disabled={\r\n              selectedAppointment.diagnose.diagnose_name === \"\" ? false : true\r\n            }\r\n          >\r\n            Buat Diagnosa\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Col>\r\n      <Col style={{ textAlign: \"end\" }}>\r\n        <ButtonGroup\r\n          style={{ marginBottom: \"1rem\" }}\r\n          aria-label=\"Second Action Group\"\r\n        >\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={handleFinishAppointment}\r\n            disabled={selectedAppointment.status === \"Done\" ? true : false}\r\n          >\r\n            Appointment Selesai\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <h1 style={{ fontWeight: \"bold\", textAlign: \"center\" }}>Schedule</h1>\r\n      <FullCalendar\r\n        plugins={[timeGridPlugin]}\r\n        initialView=\"timeGridWeek\"\r\n        weekends={false}\r\n        events={appointment}\r\n        eventClick={handleEvent}\r\n      />\r\n      <br />\r\n      {toggle && (\r\n        <>\r\n          <AppointmentActionButtons />\r\n          <CreatePrescriptionModal\r\n            show={showPrescriptionModal}\r\n            handleClose={handlePrescriptionModalClose}\r\n            appointment_id={selectedAppointment._id}\r\n          />\r\n          <AddDiagnoseModal\r\n            show={showDiagnoseModal}\r\n            handleClose={handleDiagnoseModalClose}\r\n            appointment_id={selectedAppointment._id}\r\n          />\r\n          <Cards appointment={selectedAppointment} />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default Index;\r\n","C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\AddDiagnoseModal.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\CreatePrescriptionModal.js",[],"C:\\Users\\MSI\\Documents\\ib-psikiater-client\\src\\components\\Card\\index.js",[],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":3,"column":40,"nodeType":"230","messageId":"231","endLine":3,"endColumn":44},{"ruleId":"228","severity":1,"message":"232","line":179,"column":11,"nodeType":"230","messageId":"231","endLine":179,"endColumn":19},{"ruleId":"228","severity":1,"message":"233","line":6,"column":45,"nodeType":"230","messageId":"231","endLine":6,"endColumn":50},{"ruleId":"234","severity":1,"message":"235","line":50,"column":6,"nodeType":"236","endLine":50,"endColumn":20,"suggestions":"237"},{"ruleId":"228","severity":1,"message":"238","line":10,"column":9,"nodeType":"230","messageId":"231","endLine":10,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":21,"column":6,"nodeType":"236","endLine":21,"endColumn":20,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":82,"column":15,"nodeType":"242","endLine":82,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":85,"column":15,"nodeType":"242","endLine":85,"endColumn":76},{"ruleId":"240","severity":1,"message":"241","line":89,"column":15,"nodeType":"242","endLine":89,"endColumn":73},{"ruleId":"234","severity":1,"message":"243","line":45,"column":6,"nodeType":"236","endLine":45,"endColumn":8,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":72,"column":15,"nodeType":"242","endLine":79,"endColumn":16},{"ruleId":"228","severity":1,"message":"233","line":6,"column":45,"nodeType":"230","messageId":"231","endLine":6,"endColumn":50},{"ruleId":"234","severity":1,"message":"235","line":44,"column":6,"nodeType":"236","endLine":44,"endColumn":20,"suggestions":"247"},{"ruleId":"228","severity":1,"message":"248","line":11,"column":3,"nodeType":"230","messageId":"231","endLine":11,"endColumn":13},{"ruleId":"228","severity":1,"message":"249","line":12,"column":3,"nodeType":"230","messageId":"231","endLine":12,"endColumn":14},{"ruleId":"234","severity":1,"message":"250","line":48,"column":6,"nodeType":"236","endLine":48,"endColumn":8,"suggestions":"251"},{"ruleId":"228","severity":1,"message":"252","line":77,"column":9,"nodeType":"230","messageId":"231","endLine":77,"endColumn":31},{"ruleId":"245","severity":1,"message":"246","line":94,"column":13,"nodeType":"242","endLine":97,"endColumn":14},{"ruleId":"228","severity":1,"message":"253","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"254","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"255","line":3,"column":10,"nodeType":"230","messageId":"231","endLine":3,"endColumn":16},{"ruleId":"228","severity":1,"message":"256","line":12,"column":9,"nodeType":"230","messageId":"231","endLine":12,"endColumn":16},{"ruleId":"228","severity":1,"message":"232","line":8,"column":11,"nodeType":"230","messageId":"231","endLine":8,"endColumn":19},{"ruleId":"228","severity":1,"message":"232","line":58,"column":11,"nodeType":"230","messageId":"231","endLine":58,"endColumn":19},{"ruleId":"228","severity":1,"message":"257","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"258","line":2,"column":16,"nodeType":"230","messageId":"231","endLine":2,"endColumn":24},{"ruleId":"228","severity":1,"message":"259","line":2,"column":37,"nodeType":"230","messageId":"231","endLine":2,"endColumn":45},{"ruleId":"228","severity":1,"message":"233","line":2,"column":20,"nodeType":"230","messageId":"231","endLine":2,"endColumn":25},{"ruleId":"260","severity":1,"message":"261","line":16,"column":56,"nodeType":"242","endLine":16,"endColumn":302},{"ruleId":"228","severity":1,"message":"262","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":12},{"ruleId":"263","severity":1,"message":"264","line":31,"column":15,"nodeType":"265","endLine":31,"endColumn":45},{"ruleId":"228","severity":1,"message":"253","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"254","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"266","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":11},{"ruleId":"228","severity":1,"message":"267","line":7,"column":9,"nodeType":"230","messageId":"231","endLine":7,"endColumn":20},{"ruleId":"234","severity":1,"message":"268","line":24,"column":6,"nodeType":"236","endLine":24,"endColumn":8,"suggestions":"269"},{"ruleId":"234","severity":1,"message":"268","line":38,"column":6,"nodeType":"236","endLine":38,"endColumn":8,"suggestions":"270"},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'Image' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user.role'. Either include them or remove the dependency array.","ArrayExpression",["273"],"'user' is assigned a value but never used.",["274"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'appointment_id'. Either include it or remove the dependency array.",["275"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["276"],"'InputGroup' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has a missing dependency: 'psikiater_id'. Either include it or remove the dependency array.",["277"],"'appointmentTimeHandler' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'history' is assigned a value but never used.","'Card' is defined but never used.","'Carousel' is defined but never used.","'CardDeck' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'swal' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'API' is defined but never used.","'accesstoken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'accesstoken'. Either include it or remove the dependency array.",["278"],["279"],"no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},{"desc":"283","fix":"284"},{"desc":"280","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"288","fix":"290"},"Update the dependencies array to be: [history, user.isLogin, user.role]",{"range":"291","text":"292"},{"range":"293","text":"292"},"Update the dependencies array to be: [appointment_id]",{"range":"294","text":"295"},{"range":"296","text":"292"},"Update the dependencies array to be: [psikiater_id]",{"range":"297","text":"298"},"Update the dependencies array to be: [accesstoken]",{"range":"299","text":"300"},{"range":"301","text":"300"},[1498,1512],"[history, user.isLogin, user.role]",[752,766],[1167,1169],"[appointment_id]",[1258,1272],[1459,1461],"[psikiater_id]",[883,885],"[accesstoken]",[1478,1480]]